[{"/home/yt/React/MaskMap/src/components/Main.js":"1","/home/yt/React/MaskMap/src/components/Grid.js":"2","/home/yt/React/MaskMap/src/components/MaskTable.js":"3","/home/yt/React/MaskMap/src/index.js":"4","/home/yt/React/MaskMap/src/middleWare/Service.js":"5","/home/yt/React/MaskMap/src/components/Map.js":"6"},{"size":785,"mtime":1612110134395,"results":"7","hashOfConfig":"8"},{"size":937,"mtime":1612110134395,"results":"9","hashOfConfig":"8"},{"size":796,"mtime":1612110134395,"results":"10","hashOfConfig":"8"},{"size":233,"mtime":1612110134395,"results":"11","hashOfConfig":"8"},{"size":805,"mtime":1612110134395,"results":"12","hashOfConfig":"8"},{"size":1519,"mtime":1612110134395,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1h7lht0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yt/React/MaskMap/src/components/Main.js",["26"],"/home/yt/React/MaskMap/src/components/Grid.js",["27"],"/home/yt/React/MaskMap/src/components/MaskTable.js",[],"/home/yt/React/MaskMap/src/index.js",[],"/home/yt/React/MaskMap/src/middleWare/Service.js",[],"/home/yt/React/MaskMap/src/components/Map.js",[],{"ruleId":"28","severity":1,"message":"29","line":11,"column":15,"nodeType":"30","endLine":14,"endColumn":6},{"ruleId":"31","severity":1,"message":"32","line":1,"column":18,"nodeType":"33","messageId":"34","endLine":1,"endColumn":22},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar"]